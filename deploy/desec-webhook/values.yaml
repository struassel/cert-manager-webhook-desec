# The groupName avoids naming conflicts on the Kubernetes API, it should be set by the
# author of the webhook a unique domain that the author owns. For
# example: some-provider-webhook.mycompany.tld , or
# some-provider-webhook.mypersonalsite.tld if your webhook is a personal open-source
# project.
# Once set to a unique domain name by the webhook author, it does not need to be further
# adjusted by the users of a webhook chart!
# The name will need to be referenced in each Issuer's `webhook` stanza to
# inform cert-manager of where to send ChallengePayload resources in order to
# solve the DNS01 challenge.
groupName: dns01.cert-manager.dedyn.io

certManager:
  namespace: cert-manager
  serviceAccountName: cert-manager

image:
  repository: ghcr.io/struassel/cert-manager-webhook-desec
  tag: 0.0.0
  pullPolicy: IfNotPresent
  # pullSecret: ""

replicaCount: 1

secret: {}
  #If not provided, the secret must already exist with the defined name and a key 'token' containing the token
  #token: ""
  #name: ""

nameOverride: ""
fullnameOverride: ""

clusterIssuer:
  email: name@example.com
  production:
    create: true
  staging:
    create: true
  verbose: true

service:
  type: ClusterIP
  port: 443

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
